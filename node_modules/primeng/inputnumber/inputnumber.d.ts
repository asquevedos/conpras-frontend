import { ElementRef, OnInit, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
import * as ɵngcc3 from 'primeng/button';
export declare const INPUTNUMBER_VALUE_ACCESSOR: any;
export declare class InputNumber implements OnInit {
    showButtons: boolean;
    format: boolean;
    buttonLayout: string;
    prefix: string;
    locale: string;
    suffix: string;
    localeMatcher: string;
    currency: string;
    currencyDisplay: string;
    useGrouping: boolean;
    disabled: boolean;
    inputId: string;
    styleClass: string;
    placeholder: string;
    size: number;
    maxlength: number;
    tabindex: string;
    title: string;
    ariaLabel: string;
    ariaRequired: boolean;
    name: string;
    required: boolean;
    autocomplete: string;
    min: number;
    max: number;
    minFractionDigits: number;
    maxFractionDigits: number;
    incrementButtonClass: string;
    decrementButtonClass: string;
    incrementButtonIcon: string;
    decrementButtonIcon: string;
    mode: string;
    step: number;
    input: ElementRef;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    value: number;
    onModelChange: Function;
    onModelTouched: Function;
    focused: boolean;
    isSpecialChar: boolean;
    timer: any;
    lastValue: string;
    _numeral: any;
    numberFormat: any;
    _decimal: any;
    _group: any;
    _minusSign: any;
    _currency: any;
    _prefix: any;
    _suffix: any;
    _index: any;
    ngOnInit(): void;
    formatValue(value: any): any;
    formattedValue(): any;
    onInput(event: any): void;
    onInputKeyDown(event: any): void;
    onInputKeyPress(event: any): void;
    onPaste(event: any): void;
    onInputClick(): void;
    onInputFocus(event: any): void;
    onInputBlur(event: any): void;
    onUpButtonMouseDown(event: any): void;
    onUpButtonMouseUp(): void;
    onUpButtonMouseLeave(): void;
    onUpButtonKeyDown(event: any): void;
    onUpButtonKeyUp(): void;
    onDownButtonMouseDown(event: any): void;
    onDownButtonMouseUp(): void;
    onDownButtonMouseLeave(): void;
    onDownButtonKeyUp(): void;
    onDownButtonKeyDown(event: any): void;
    spin(event: any, dir: any): void;
    repeat(event: any, interval: any, dir: any): void;
    clearTimer(): void;
    insert(event: any, text: any): void;
    insertText(value: any, text: any, start: any, end: any): any;
    initCursor(): void;
    updateInput(value: any, operation: any): void;
    updateModel(event: any, value: any): void;
    updateValue(event: any, valueStr: any, operation: any): void;
    deleteRange(value: any, start: any, end: any): any;
    isWithinRange(value: any): boolean;
    isNumeralChar(char: any): boolean;
    isMinusSign(char: any): boolean;
    parseValue(text: any): number;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    getOptions(): {
        localeMatcher: string;
        style: string;
        currency: string;
        currencyDisplay: string;
        useGrouping: boolean;
        minimumFractionDigits: number;
        maximumFractionDigits: number;
    };
    getDecimalExpression(): RegExp;
    getGroupingExpression(): RegExp;
    getMinusSignExpression(): RegExp;
    getCurrencyExpression(): RegExp;
    filled(): boolean;
    resetRegex(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InputNumber, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<InputNumber, "p-inputNumber", never, { "showButtons": "showButtons"; "format": "format"; "buttonLayout": "buttonLayout"; "useGrouping": "useGrouping"; "incrementButtonIcon": "incrementButtonIcon"; "decrementButtonIcon": "decrementButtonIcon"; "mode": "mode"; "step": "step"; "prefix": "prefix"; "locale": "locale"; "suffix": "suffix"; "localeMatcher": "localeMatcher"; "currency": "currency"; "currencyDisplay": "currencyDisplay"; "disabled": "disabled"; "inputId": "inputId"; "styleClass": "styleClass"; "placeholder": "placeholder"; "size": "size"; "maxlength": "maxlength"; "tabindex": "tabindex"; "title": "title"; "ariaLabel": "ariaLabel"; "ariaRequired": "ariaRequired"; "name": "name"; "required": "required"; "autocomplete": "autocomplete"; "min": "min"; "max": "max"; "minFractionDigits": "minFractionDigits"; "maxFractionDigits": "maxFractionDigits"; "incrementButtonClass": "incrementButtonClass"; "decrementButtonClass": "decrementButtonClass"; }, { "onFocus": "onFocus"; "onBlur": "onBlur"; }, never, never>;
}
export declare class InputNumberModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<InputNumberModule, [typeof InputNumber], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.ButtonModule], [typeof InputNumber]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<InputNumberModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRudW1iZXIuZC50cyIsInNvdXJjZXMiOlsiaW5wdXRudW1iZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkluaXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgSU5QVVROVU1CRVJfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElucHV0TnVtYmVyIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBzaG93QnV0dG9uczogYm9vbGVhbjtcbiAgICBmb3JtYXQ6IGJvb2xlYW47XG4gICAgYnV0dG9uTGF5b3V0OiBzdHJpbmc7XG4gICAgcHJlZml4OiBzdHJpbmc7XG4gICAgbG9jYWxlOiBzdHJpbmc7XG4gICAgc3VmZml4OiBzdHJpbmc7XG4gICAgbG9jYWxlTWF0Y2hlcjogc3RyaW5nO1xuICAgIGN1cnJlbmN5OiBzdHJpbmc7XG4gICAgY3VycmVuY3lEaXNwbGF5OiBzdHJpbmc7XG4gICAgdXNlR3JvdXBpbmc6IGJvb2xlYW47XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIHNpemU6IG51bWJlcjtcbiAgICBtYXhsZW5ndGg6IG51bWJlcjtcbiAgICB0YWJpbmRleDogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgYXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgYXJpYVJlcXVpcmVkOiBib29sZWFuO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICByZXF1aXJlZDogYm9vbGVhbjtcbiAgICBhdXRvY29tcGxldGU6IHN0cmluZztcbiAgICBtaW46IG51bWJlcjtcbiAgICBtYXg6IG51bWJlcjtcbiAgICBtaW5GcmFjdGlvbkRpZ2l0czogbnVtYmVyO1xuICAgIG1heEZyYWN0aW9uRGlnaXRzOiBudW1iZXI7XG4gICAgaW5jcmVtZW50QnV0dG9uQ2xhc3M6IHN0cmluZztcbiAgICBkZWNyZW1lbnRCdXR0b25DbGFzczogc3RyaW5nO1xuICAgIGluY3JlbWVudEJ1dHRvbkljb246IHN0cmluZztcbiAgICBkZWNyZW1lbnRCdXR0b25JY29uOiBzdHJpbmc7XG4gICAgbW9kZTogc3RyaW5nO1xuICAgIHN0ZXA6IG51bWJlcjtcbiAgICBpbnB1dDogRWxlbWVudFJlZjtcbiAgICBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHZhbHVlOiBudW1iZXI7XG4gICAgb25Nb2RlbENoYW5nZTogRnVuY3Rpb247XG4gICAgb25Nb2RlbFRvdWNoZWQ6IEZ1bmN0aW9uO1xuICAgIGZvY3VzZWQ6IGJvb2xlYW47XG4gICAgaXNTcGVjaWFsQ2hhcjogYm9vbGVhbjtcbiAgICB0aW1lcjogYW55O1xuICAgIGxhc3RWYWx1ZTogc3RyaW5nO1xuICAgIF9udW1lcmFsOiBhbnk7XG4gICAgbnVtYmVyRm9ybWF0OiBhbnk7XG4gICAgX2RlY2ltYWw6IGFueTtcbiAgICBfZ3JvdXA6IGFueTtcbiAgICBfbWludXNTaWduOiBhbnk7XG4gICAgX2N1cnJlbmN5OiBhbnk7XG4gICAgX3ByZWZpeDogYW55O1xuICAgIF9zdWZmaXg6IGFueTtcbiAgICBfaW5kZXg6IGFueTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIGZvcm1hdFZhbHVlKHZhbHVlOiBhbnkpOiBhbnk7XG4gICAgZm9ybWF0dGVkVmFsdWUoKTogYW55O1xuICAgIG9uSW5wdXQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dEtleURvd24oZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dEtleVByZXNzKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uUGFzdGUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dENsaWNrKCk6IHZvaWQ7XG4gICAgb25JbnB1dEZvY3VzKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uSW5wdXRCbHVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25Nb3VzZURvd24oZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25VcEJ1dHRvbk1vdXNlVXAoKTogdm9pZDtcbiAgICBvblVwQnV0dG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25LZXlEb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25LZXlVcCgpOiB2b2lkO1xuICAgIG9uRG93bkJ1dHRvbk1vdXNlRG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRvd25CdXR0b25Nb3VzZVVwKCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xuICAgIG9uRG93bkJ1dHRvbktleVVwKCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uS2V5RG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBzcGluKGV2ZW50OiBhbnksIGRpcjogYW55KTogdm9pZDtcbiAgICByZXBlYXQoZXZlbnQ6IGFueSwgaW50ZXJ2YWw6IGFueSwgZGlyOiBhbnkpOiB2b2lkO1xuICAgIGNsZWFyVGltZXIoKTogdm9pZDtcbiAgICBpbnNlcnQoZXZlbnQ6IGFueSwgdGV4dDogYW55KTogdm9pZDtcbiAgICBpbnNlcnRUZXh0KHZhbHVlOiBhbnksIHRleHQ6IGFueSwgc3RhcnQ6IGFueSwgZW5kOiBhbnkpOiBhbnk7XG4gICAgaW5pdEN1cnNvcigpOiB2b2lkO1xuICAgIHVwZGF0ZUlucHV0KHZhbHVlOiBhbnksIG9wZXJhdGlvbjogYW55KTogdm9pZDtcbiAgICB1cGRhdGVNb2RlbChldmVudDogYW55LCB2YWx1ZTogYW55KTogdm9pZDtcbiAgICB1cGRhdGVWYWx1ZShldmVudDogYW55LCB2YWx1ZVN0cjogYW55LCBvcGVyYXRpb246IGFueSk6IHZvaWQ7XG4gICAgZGVsZXRlUmFuZ2UodmFsdWU6IGFueSwgc3RhcnQ6IGFueSwgZW5kOiBhbnkpOiBhbnk7XG4gICAgaXNXaXRoaW5SYW5nZSh2YWx1ZTogYW55KTogYm9vbGVhbjtcbiAgICBpc051bWVyYWxDaGFyKGNoYXI6IGFueSk6IGJvb2xlYW47XG4gICAgaXNNaW51c1NpZ24oY2hhcjogYW55KTogYm9vbGVhbjtcbiAgICBwYXJzZVZhbHVlKHRleHQ6IGFueSk6IG51bWJlcjtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIGdldE9wdGlvbnMoKToge1xuICAgICAgICBsb2NhbGVNYXRjaGVyOiBzdHJpbmc7XG4gICAgICAgIHN0eWxlOiBzdHJpbmc7XG4gICAgICAgIGN1cnJlbmN5OiBzdHJpbmc7XG4gICAgICAgIGN1cnJlbmN5RGlzcGxheTogc3RyaW5nO1xuICAgICAgICB1c2VHcm91cGluZzogYm9vbGVhbjtcbiAgICAgICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiBudW1iZXI7XG4gICAgICAgIG1heGltdW1GcmFjdGlvbkRpZ2l0czogbnVtYmVyO1xuICAgIH07XG4gICAgZ2V0RGVjaW1hbEV4cHJlc3Npb24oKTogUmVnRXhwO1xuICAgIGdldEdyb3VwaW5nRXhwcmVzc2lvbigpOiBSZWdFeHA7XG4gICAgZ2V0TWludXNTaWduRXhwcmVzc2lvbigpOiBSZWdFeHA7XG4gICAgZ2V0Q3VycmVuY3lFeHByZXNzaW9uKCk6IFJlZ0V4cDtcbiAgICBmaWxsZWQoKTogYm9vbGVhbjtcbiAgICByZXNldFJlZ2V4KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJbnB1dE51bWJlck1vZHVsZSB7XG59XG4iXX0=